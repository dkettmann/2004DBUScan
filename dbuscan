#!/usr/bin/perl
use Net::SNMP 4.1.0 qw(oid_lex_sort oid_base_match SNMP_VERSION_1 DEBUG_ALL);
$bentrupberger = '1.3.6.1.2.1.2.2.1.2'; 
$snmp = "4E5347";
open(BRLIST, "/home/kettmannd/dbuscan/brlist");
while (<BRLIST>) 
	{
	$s = "";
	@args = (-varbindlist    =>   [$bentrupberger]); 	
	push(@args, -maxrepetitions => 25);
	chomp($rtr="cnbr" . "$_");
	($s, $e) = Net::SNMP->session(
		-timeout => "20", 
		-hostname => "$rtr",
		-community => "$snmp",
		-version => "2");
        unless(defined($s)) { next; }		
	outer:	while (defined($s->get_bulk_request(@args)))   {
	@oids = oid_lex_sort(keys(%{$s->var_bind_list}));
        foreach (@oids) {
           if (!oid_base_match($bentrupberger, $_)) { last outer; }
#e-e.com code
	   my $bind_names = $s->var_bind_list->{$_};
	   unless ($bind_names) {
#     	   warn $s->error;
     	   next;
	   }


	   if ($bind_names =~ /Async/)  {
                $_ =~ /1\.3\.6\.1\.2\.1\.2\.2\.1\.2\.(\d+)/;
                $asyncif = $1;
                $asyncoid = ".1.3.6.1.2.1.2.2.1.8." . "$asyncif";
                @brgs = (-varbindlist =>   [$asyncoid]);
                $goop = $s->get_request("$asyncoid");
                foreach ($s->var_bind_names()) {
                    $result = $s->var_bind_list()->{$_};
                    if ($result == "1") {
			$status = "Active"; 
			system("/home/kettmannd/dbuscan/rptr $rtr");
		    }

                    else                {$status = "Normal"; }
                    print "$rtr = $status\n";
	   	}
	   }		


           # Make sure we have not hit the end of the MIB
#           if ($s->var_bind_list->{$_} eq 'endOfMibView') { last outer; }
        }
      # Get the last OBJECT IDENTIFIER in the returned list
      @args = (-maxrepetitions => 25, -varbindlist => [pop(@oids)]);
   }
}	
